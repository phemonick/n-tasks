{"version":3,"sources":["components/Dogs.js","components/sDogs.js","App.js","reportWebVitals.js","index.js"],"names":["Dogs","props","appContext","React","useContext","AppContext","dogs","setDogs","useEffect","a","axios","get","response","arrRes","Object","keys","data","message","prefetch","className","length","map","breed","index","to","pathname","state","breedIndex","SDogs","useLocation","bIndex","allDogs","allClicked","prevImgs","useState","dogName","setDogName","imgs","setImgs","isLoading","setLoading","setBreedIndex","fetchDogs","dogimgs","randomDogs","rDogimg","Math","floor","random","push","console","log","updateDogs","preFet","Array","from","item","alt","src","disabled","onClick","newName","createContext","App","setPrevImg","Provider","value","img","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d324692b.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nimport axios from 'axios';\nimport {\n    Link,\n  } from \"react-router-dom\";\nimport { AppContext } from '../App';\n \n  function Dogs(props) {\n\n    const appContext = React.useContext(AppContext);\n    const { dogs, setDogs } = appContext;\n\n    useEffect(() => {\n      async function prefetch() {\n        try {\n          let response = await axios.get('https://dog.ceo/api/breeds/list/all');\n          const arrRes = Object.keys(response.data.message);\n          setDogs(arrRes);\n        } catch (error) {}\n      }\n      prefetch();\n    }, []);\n\n    return (\n      <ul className='list'>\n        <li className='sticky-list'> Dog List </li>\n        {\n          dogs.length ?\n          (\n            dogs.map((breed,index)=>{\n               return(\n                 <li key={index} className='list-items'>\n                   <div className='content-root' >\n                   <Link\n                   className='text'\n                    to={{\n                      pathname: \"/view\",\n                      state: {\n                        breed: breed,\n                        breedIndex: index\n                      },\n                    }}\n                   >\n                      <div> {index + 1} {breed} </div>\n                   </Link>\n                       \n                  </div>\n                 </li>\n                 \n               )\n            })\n          ) : null\n        }\n      </ul>\n    )\n  }\nexport default Dogs;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { AppContext } from '../App';\nimport { useLocation } from 'react-router-dom'\n\nfunction SDogs(props) {\n\n\n  const appContext = React.useContext(AppContext);\n\n  const {\n    breed,\n    breedIndex: bIndex,\n  } = useLocation()?.state;\n\n  const {\n    dogs: allDogs,\n    allClicked,\n    prevImgs,\n  } = appContext;\n\n  const [dogName, setDogName] = useState(breed || '');\n  const [imgs, setImgs] = useState(prevImgs[dogName] || []);\n  const [isLoading, setLoading] = useState(false);\n  const [dogs, setDogs] = useState(allDogs);\n  const [breedIndex, setBreedIndex] = useState(bIndex);\n\n  useEffect(() => {\n    async function preFet() {\n      await fetchDogs();\n    }\n    preFet();\n  }, []);\n\n  async function fetchDogs() {\n    try {\n      if (!prevImgs[dogName]) {\n        setLoading(true)\n\n        let response = await axios.get(\n          `https://dog.ceo/api/breed/${dogName}/images`,\n        );\n        let dogimgs = response?.data?.message;\n        if (dogimgs?.length) {\n          let randomDogs = [];\n          for (let index = 0; index < 4; index++) {\n            let rDogimg = dogimgs[Math.floor(Math.random() * dogimgs.length)];\n\n            randomDogs.push(rDogimg);\n          }\n          allClicked(dogName, randomDogs);\n          setImgs(randomDogs);\n        }\n      }\n      setLoading(false)\n    } catch (error) {\n        setLoading(false)\n      console.log(error);\n    }\n  }\n\n  async function updateDogs(breed) {\n    try {\n      if (!prevImgs[breed]) {\n        setLoading(true)\n        \n        let response = await axios.get(\n          `https://dog.ceo/api/breed/${breed}/images`,\n        );\n        let dogimgs = response?.data?.message;\n        if (dogimgs?.length) {\n          let randomDogs = [];\n          for (let index = 0; index < 4; index++) {\n            let rDogimg = dogimgs[Math.floor(Math.random() * dogimgs.length)];\n\n            randomDogs.push(rDogimg);\n          }\n          allClicked(breed, randomDogs);\n          setImgs(randomDogs);\n        }\n      } else {\n          setImgs(prevImgs[breed])\n      }\n\n      setLoading(false)\n    } catch (error) {\n        setLoading(false)\n    }\n  }\n\n  if (!appContext) {\n    return null;\n}\n\n  return (\n      <div className='center-content'> \n        <div className='title'> {dogName} </div>\n        <div className='img-container'>\n        {\n            !isLoading && (\n                <>\n                    {\n                        Array.from(Array(4).keys()).map((item) => (\n                            <img\n                                key={item}\n                                alt='dog'\n                                className='img-c'\n                                src={imgs[item]}\n                            />\n                        ))\n                    }\n                </>\n            )\n        }\n        </div>\n        <div className='to-row'>\n            <button className='btn' disabled={!(breedIndex > 1)} onClick={\n                () => {\n                    const newName = dogs[breedIndex - 1];\n                    setDogName(newName);\n                    setBreedIndex(breedIndex - 1);\n                    updateDogs(newName);\n                }\n            }>\n                Previous\n            </button>\n            <button className='btn' onClick={\n                () => {\n                    const newName = dogs[breedIndex + 1];\n                    setDogName(newName);\n                    setBreedIndex(breedIndex + 1);\n                    updateDogs(newName);\n                }\n            }>\n                Next\n            </button>\n        </div>\n      </div>\n  );\n}\n\nexport default SDogs;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Dogs from './components/Dogs';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport SDogs from './components/sDogs';\n\nexport const AppContext = React.createContext(null);\n\nfunction App() {\n  const [dogs, setDogs] = useState('');\n  const [prevImgs, setPrevImg] = useState({});\n\n  function allClicked(breed, img) {\n    setPrevImg({...prevImgs, [breed]: img});\n  }\n\n  return (\n    <Router>\n      <AppContext.Provider\n        value={{\n          dogs,\n          prevImgs,\n          allClicked,\n          setDogs\n        }}\n      >\n        <Switch>\n          <Route exact path='/'> <Dogs /> </Route>\n          <Route path='/view' exact> <SDogs /> </Route>\n        </Switch>\n      </AppContext.Provider>\n\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}